%cx-carousel {
  display: flex;
  flex: 100%;
  --cx-speed: 0.5;
  flex-direction: column;

  @include media-breakpoint-down(md) {
    padding: 1rem;
  }

  > h3 {
    @include type('3');
    font-weight: bold;
    text-align: center;
    margin-top: 2rem;
    margin-bottom: 1rem;
    @include media-breakpoint-up(xl) {
      margin-bottom: 3rem;
    }
  }

  .carousel-panel {
    display: flex;
    justify-content: space-between;

    // The size of carousel items depends on the number of items per slide.
    // We generate 10 sizes in case there are a lot of carousel items displayed
    // on a single slide.
    @for $i from 1 through 10 {
      &.size-#{$i} .product {
        flex: 0 0 calc((100 / #{$i}) * 1%);
      }
    }

    .groups {
      flex: auto;
      position: relative;

      .group {
        transition: 0.6s all;
        width: 100%;
        display: flex;
        flex-wrap: nowrap;
        justify-content: flex-start;

        &:not(:last-child) {
          // we keep the last group non-absolute, so the height
          //  of the parent size is based on contetn
          position: absolute;
        }

        .product {
          display: flex;
          flex-direction: column;
          text-align: center;
          justify-content: space-between;
          padding-bottom: 10px;
          color: var(--cx-g-color-text);
          cx-media {
            height: 20vmin;

            &.is-missing {
              min-height: 20vmin;
              background-size: 20vmin;
            }
          }
          opacity: 0;
          z-index: -1;
          &.active {
            opacity: 1;
            z-index: 1;
          }

          transition: 0.6s all;
          // we add a transition delay so that items are nicely animated in a sequence
          @for $i from 1 through 4 {
            &:nth-child(#{$i}) {
              transition-delay: calc(var(--cx-speed, 1) * #{$i * 0.25s});
            }
          }

          h4 {
            font-size: 0.9rem;
            height: 30px;
            font-weight: bold;
            margin-top: 5px;
          }
          &:hover {
            text-decoration: none;
            h4 {
              color: var(--cx-g-color-primary);
            }
          }
        }
      }
    }
  }

  button {
    &:focus {
      outline: none;
    }
    color: var(--cx-g-color-light);
    &:not(:disabled) {
      cursor: pointer;
    }
  }

  .indicators {
    display: flex;
    justify-content: center;

    button {
      border: none;
      padding: 10px;
      margin: 0;
      transition: 0.6s all;
      background-color: transparent;
      &[disabled] {
        color: var(--cx-g-color-primary);
      }
      &:not(:disabled):hover {
        color: var(--cx-g-color-secondary);
      }
    }

    @include media-breakpoint-only(xs) {
      display: none;
    }
  }

  .previous,
  .next {
    background-color: transparent;
    border: none;
    font-size: 2rem;

    &:disabled {
      opacity: 0.5;
    }

    &:not(:disabled):hover {
      color: var(--cx-g-color-primary);
    }
  }
}
