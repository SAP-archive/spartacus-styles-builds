@import '../../theme';
@import '~bootstrap/scss/buttons';

button {
  &:focus {
    outline: var(--cx-outline, none);
  }

  &.link {
    text-decoration: var(--cx-text-decoration, underline);
    background-color: var(--cx-background-color, none);
    border-style: var(--cx-border-style, none);
    padding: var(--cx-padding, 0);
    cursor: var(--cx-cursor, pointer);

    &:disabled {
      pointer-events: var(--cx-pointer-events, none);
      cursor: var(--cx-cursor, not-allowed);
      opacity: var(--cx-opacity, 0.8);
    }
  }
}

//buttons - https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss#L348
.btn {
  font-size: $font-size-base * 1.125;
  text-transform: var(--cx-text-transform, capitalize);
  line-height: var(--cx-line-height, 1.34);
  padding: var(--cx-padding, 11px 12px);
  height: var(--cx-height, 48px);
  max-height: var(--cx-max-height, 48px);
  min-width: var(--cx-min-width, 48px);
  border-radius: var(--cx-border-radius, var(--cx-g-buttons-border-radius));

  &-sm {
    padding-top: 0;
    padding-bottom: 0;
    height: var(--cx-height, 40px);
    max-height: var(--cx-max-height, 40px);
    min-width: var(--cx-min-width, 40px);
  }

  &-lg {
    height: var(--cx-height, 55px);
    max-height: var(--cx-max-height, 55px);
    min-width: var(--cx-min-width, 55px);
  }

  &-primary {
    background-color: var(--cx-background-color, var(--cx-g-color-primary));
    border-color: var(--cx-border-color, var(--cx-g-color-primary));

    &:hover {
      background-color: var(--cx-background-color, var(--cx-g-color-primary));
      border-color: var(--cx-border-color, var(--cx-g-color-primary));
      @include cx-darken(88);
    }

    &.active {
      background-color: var(--cx-background-color, var(--cx-g-color-primary));
      border-color: var(--cx-border-color, var(--cx-g-color-primary));
      @include cx-darken(88);
    }

    &.disabled {
      background-color: var(--cx-background-color, var(--cx-g-color-primary));
      border-color: var(--cx-border-color, var(--cx-g-color-primary));

      &:hover {
        border-color: var(--cx-border-color, var(--cx-g-color-primary));
        @include cx-darken(100);
      }
    }

    &:focus {
      box-shadow: 0 0 0 0.2em rgba(var(--cx-g-color-primary), 0.5);
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
      background-color: var(--cx-background-color, var(--cx-g-color-primary));
      border-color: var(--cx-border-color, var(--cx-g-color-primary));
      @include cx-darken(88);

      &:focus {
        box-shadow: 0 0 0 0.2em rgba(var(--cx-g-color-primary), 0.5);
      }
    }
  }

  &-secondary {
    background-color: var(--cx-background-color, var(--cx-g-color-secondary));
    border-color: var(--cx-border-color, var(--cx-g-color-secondary));

    &:hover {
      background-color: var(--cx-background-color, var(--cx-g-color-secondary));
      border-color: var(--cx-border-color, var(--cx-g-color-secondary));
      @include cx-darken(84);
    }

    &.active {
      background-color: var(--cx-background-color, var(--cx-g-color-secondary));
      border-color: var(--cx-border-color, var(--cx-g-color-secondary));
      @include cx-darken(84);
    }

    &.disabled {
      background-color: var(--cx-background-color, var(--cx-g-color-secondary));
      border-color: var(--cx-border-color, var(--cx-g-color-secondary));

      &:hover {
        border-color: var(--cx-border-color, var(--cx-g-color-secondary));
        @include cx-darken(100);
      }
    }

    &:focus {
      //this here below will not work unles cx global colors are initially declared in rbg
      box-shadow: 0 0 0 0.2em rgba(var(--cx-g-color-secondary), 0.5);
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
      background-color: var(--cx-background-color, var(--cx-g-color-secondary));
      border-color: var(--cx-border-color, var(--cx-g-color-secondary));
      @include cx-darken(84);

      &:focus {
        //this here below will not work unles cx global colors are initially declared in rbg
        box-shadow: 0 0 0 0.2em rgba(var(--cx-g-color-secondary), 0.5);
      }
    }
  }

  &-link {
    font-size: $font-size-base * 1.125;
    color: var(--cx-color, var(--cx-g-color-text));
    text-decoration: var(--cx-text-decoration, underline);
    cursor: var(--cx-cursor, pointer);
    display: var(--cx-display, inline-block);
  }
}

.btn-action {
  @extend .btn-outline-text !optional;
  border-width: var(--cx-border-width, 2px);
  border-style: var(--cx-border-style, solid);

  &:hover {
    color: var(--cx-color, var(--cx-g-color-primary));
    border-width: var(--cx-border-width, 2px);
    border-style: var(--cx-border-style, solid);
    border-color: var(--cx-border-color, var(--cx-g-color-primary));
    background-color: var(--cx-background-color, var(--cx-g-color-inverse));
  }

  &.active {
    color: var(--cx-color, var(--cx-g-color-primary));
    border-width: var(--cx-border-width, 2px);
    border-style: var(--cx-border-style, solid);
    background-color: var(--cx-background-color, var(--cx-g-color-inverse));
  }

  &.disabled {
    color: var(--cx-color, var(--cx-g-color-light));
    border-width: var(--cx-border-width, 2px);
    border-style: var(--cx-border-style, solid);
    border-color: var(--cx-border-color, var(--cx-g-color-light));
    opacity: var(--cx-opacity, 1);
  }
}

.btn[aria-pressed='true'] {
  @extend .btn.active;

  &.btn-primary {
    @extend .btn-primary;
  }

  &.btn-secondary {
    @extend .btn-secondary;
  }

  &.btn-action {
    @extend .btn-action;
  }
}

.btn[aria-disabled='true'] {
  @extend .btn.disabled;
  cursor: var(--cx-cursor, auto);
  opacity: var(--cx-opacity, 0.6);

  &.btn-primary {
    @extend .btn-primary.disabled;
  }

  &.btn-secondary {
    @extend .btn-secondary.disabled;
  }

  &.btn-action {
    @extend .btn-action.disabled;
  }
}

.btn[disabled] {
  &.btn-primary {
    @extend .btn-primary.disabled;
  }

  &.btn-secondary {
    @extend .btn-secondary.disabled;
  }

  &.btn-action {
    @extend .btn-action.disabled;
  }
}
